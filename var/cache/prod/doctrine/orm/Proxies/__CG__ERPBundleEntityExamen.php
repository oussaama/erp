<?php

namespace Proxies\__CG__\ERPBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Examen extends \ERPBundle\Entity\Examen implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'id', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'type', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'dateExamen', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'duree', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'classe', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'description', 'enseignants', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'salle', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'matiere', 'notes', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'qualified'];
        }

        return ['__isInitialized__', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'id', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'type', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'dateExamen', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'duree', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'classe', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'description', 'enseignants', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'salle', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'matiere', 'notes', '' . "\0" . 'ERPBundle\\Entity\\Examen' . "\0" . 'qualified'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Examen $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuree($duree)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuree', [$duree]);

        return parent::setDuree($duree);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuree()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuree', []);

        return parent::getDuree();
    }

    /**
     * {@inheritDoc}
     */
    public function setClasse(\ERPBundle\Entity\Classe $classe = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClasse', [$classe]);

        return parent::setClasse($classe);
    }

    /**
     * {@inheritDoc}
     */
    public function getClasse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClasse', []);

        return parent::getClasse();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuteur(\ERPBundle\Entity\Enseignant $enseignant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuteur', [$enseignant]);

        return parent::setAuteur($enseignant);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAuteur(\ERPBundle\Entity\Enseignant $enseignant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAuteur', [$enseignant]);

        return parent::removeAuteur($enseignant);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnseignants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnseignants', []);

        return parent::getEnseignants();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateExamen($dateExamen)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateExamen', [$dateExamen]);

        return parent::setDateExamen($dateExamen);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateExamen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateExamen', []);

        return parent::getDateExamen();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalle(\ERPBundle\Entity\Salle $salle = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalle', [$salle]);

        return parent::setSalle($salle);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalle', []);

        return parent::getSalle();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getQualified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQualified', []);

        return parent::getQualified();
    }

    /**
     * {@inheritDoc}
     */
    public function setQualified($qualified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQualified', [$qualified]);

        return parent::setQualified($qualified);
    }

    /**
     * {@inheritDoc}
     */
    public function setMatiere(\ERPBundle\Entity\Matiere $matiere = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMatiere', [$matiere]);

        return parent::setMatiere($matiere);
    }

    /**
     * {@inheritDoc}
     */
    public function getMatiere()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatiere', []);

        return parent::getMatiere();
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', []);

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function addNote(\ERPBundle\Entity\Note $note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNote', [$note]);

        return parent::addNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function removeJob(\ERPBundle\Entity\Note $note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeJob', [$note]);

        return parent::removeJob($note);
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function addEnseignant(\ERPBundle\Entity\Enseignant $enseignant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEnseignant', [$enseignant]);

        return parent::addEnseignant($enseignant);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEnseignant(\ERPBundle\Entity\Enseignant $enseignant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEnseignant', [$enseignant]);

        return parent::removeEnseignant($enseignant);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNote(\ERPBundle\Entity\Note $note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNote', [$note]);

        return parent::removeNote($note);
    }

}
